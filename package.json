{
  "name": "ci-scripts",
  "main": "out/index.js",
  "types": "out/index.d.ts",
  "files": [
    "out"
  ],
  "scripts": {
    "all_dev": "ts-node ./scripts/all_dev.ts --extension=\"all\"",
    "all": "npm ci && concurrently \"npm run build:qt-cli\" \"npm run ci:qt-lib && npm run compile:qt-lib && npm run prepareNatvisFiles && npm run ci:all && npm run ci-lint:all && npm run package:all && npm run install-ext:all_sync\"",
    "all_sync": "npm run build:qt-cli && npm run ci:qt-lib && npm run prepareNatvisFiles && npm run compile:qt-lib && npm run ci:all_sync && npm run ci-lint:all_sync && npm run package:all_sync && npm run install-ext:all_sync",
    "all_dev:qt-core": "ts-node ./scripts/all_dev.ts --extension=\"qt-core\"",
    "all_dev:qt-qml": "ts-node ./scripts/all_dev.ts --extension=\"qt-qml\"",
    "all_dev:qt-cpp": "ts-node ./scripts/all_dev.ts --extension=\"qt-cpp\"",
    "all_dev:qt-ui": "ts-node ./scripts/all_dev.ts --extension=\"qt-ui\"",
    "lint": "npm run prettierWrite && eslint scripts --fix --cache",
    "lint:qt-core": "cd qt-core && npm run lint",
    "lint:qt-qml": "cd qt-qml && npm run lint",
    "lint:qt-cpp": "cd qt-cpp && npm run lint",
    "lint:qt-ui": "cd qt-ui && npm run lint",
    "lint:qt-lib": "cd qt-lib && npm run lint",
    "lint:all": "concurrently \"npm run lint\" \"npm run lint:qt-lib\" \"npm run lint:qt-core\" \"npm run lint:qt-cpp\" \"npm run lint:qt-ui\" \"npm run lint:qt-qml\"",
    "lint:all_sync": "npm run lint && npm run lint:qt-lib && npm run lint:qt-core && npm run lint:qt-cpp && npm run lint:qt-ui && npm run lint:qt-qml",
    "pretest": "npm run prettierWrite && npx tsc --incremental --noEmit && eslint scripts --fix --cache",
    "pretest:qt-core": "cd qt-core && npm run pretest",
    "pretest:qt-qml": "cd qt-qml && npm run pretest",
    "pretest:qt-cpp": "cd qt-cpp && npm run pretest",
    "pretest:qt-ui": "cd qt-ui && npm run pretest",
    "pretest:qt-lib": "cd qt-lib && npm run pretest",
    "pretest:all": "concurrently \"npm run pretest\" \"npm run pretest:qt-lib\" \"npm run pretest:qt-core\" \"npm run pretest:qt-cpp\" \"npm run pretest:qt-ui\" \"npm run pretest:qt-qml\"",
    "pretest:all_sync": "npm run pretest && npm run pretest:qt-lib && npm run pretest:qt-core && npm run pretest:qt-cpp && npm run pretest:qt-ui && npm run pretest:qt-qml",
    "ci-lint:qt-core": "ts-node ./scripts/ci_lint.ts --dir=\"qt-core\" --exclude_licenses=\"qt-core\"",
    "ci-lint:qt-qml": "ts-node ./scripts/ci_lint.ts --dir=\"qt-qml\" --exclude_licenses=\"qt-qml\"",
    "ci-lint:qt-cpp": "ts-node ./scripts/ci_lint.ts --dir=\"qt-cpp\" --exclude_licenses=\"qt-cpp\"",
    "ci-lint:qt-ui": "ts-node ./scripts/ci_lint.ts --dir=\"qt-ui\" --exclude_licenses=\"qt-ui\"",
    "ci-lint:qt-lib": "npm run checkStyle -- --dir=\"qt-lib\" && npm run eslint -- --dir=\"qt-lib\" && npm run checkPackage -- --dir=\"qt-lib\"",
    "ci-lint:all": "concurrently \"npm run ci-lint\" \"npm run ci-lint:qt-lib\" \"npm run ci-lint:qt-core\" \"npm run ci-lint:qt-cpp\" \"npm run ci-lint:qt-ui\" \"npm run ci-lint:qt-qml\" \"npm run checkChangelog:all_ext_pack\"",
    "ci-lint:all_sync": "npm run ci-lint && npm run ci-lint:qt-lib && npm run ci-lint:qt-core && npm run ci-lint:qt-cpp && npm run ci-lint:qt-ui && npm run ci-lint:qt-qml ",
    "ci-lint": "npm run prettierCheck && eslint scripts",
    "install-ext:qt-core": "ts-node ./scripts/install-ext.ts --dir=\"qt-core\" --name=\"qt-core\"",
    "install-ext:qt-qml": "ts-node ./scripts/install-ext.ts --dir=\"qt-qml\" --name=\"qt-qml\"",
    "install-ext:qt-cpp": "ts-node ./scripts/install-ext.ts --dir=\"qt-cpp\" --name=\"qt-cpp\"",
    "install-ext:qt-ui": "ts-node ./scripts/install-ext.ts --dir=\"qt-ui\" --name=\"qt-ui\"",
    "install-ext:all": "concurrently \"npm run install-ext:qt-core\" \"npm run install-ext:qt-cpp\" \"npm run install-ext:qt-ui\" \"npm run install-ext:qt-qml\"",
    "install-ext:all_sync": "npm run install-ext:qt-core && npm run install-ext:qt-ui && npm run install-ext:qt-cpp && npm run install-ext:qt-qml",
    "install:qt-core": "cd qt-core && npm run install:all",
    "install:qt-qml": "cd qt-qml && npm install",
    "install:qt-cpp": "cd qt-cpp && npm install",
    "install:qt-ui": "cd qt-ui && npm install",
    "install:qt-lib": "cd qt-lib && npm install",
    "install:all": "concurrently \"npm install\" \"npm run install:qt-lib\" \"npm run install:qt-core\" \"npm run install:qt-cpp\" \"npm run install:qt-ui\" \"npm run install:qt-qml\"",
    "install:all_sync": "npm install && npm run install:qt-lib && npm run install:qt-core && npm run install:qt-cpp && npm run install:qt-ui && npm run install:qt-qml",
    "eslint": "ts-node ./scripts/eslint.ts",
    "ci:qt-core": "cd qt-core && npm run ci:all",
    "ci:qt-qml": "cd qt-qml && npm ci",
    "ci:qt-cpp": "cd qt-cpp && npm ci",
    "ci:qt-ui": "cd qt-ui && npm ci",
    "ci:qt-lib": "cd qt-lib && npm ci",
    "ci:all": "npm ci && concurrently \"npm run ci:qt-lib\" \"npm run ci:qt-core\" \"npm run ci:qt-cpp\" \"npm run ci:qt-ui\" \"npm run ci:qt-qml\"",
    "ci:all_sync": "npm ci && npm run ci:qt-lib && npm run ci:qt-core && npm run ci:qt-cpp && npm run ci:qt-ui && npm run ci:qt-qml",
    "package:qt-core": "ts-node ./scripts/package.ts --extension=\"qt-core\"",
    "package:qt-qml": "ts-node ./scripts/package.ts --extension=\"qt-qml\"",
    "package:qt-cpp": "ts-node ./scripts/package.ts --extension=\"qt-cpp\"",
    "package:qt-ui": "ts-node ./scripts/package.ts --extension=\"qt-ui\"",
    "package:all": "concurrently \"npm run package:qt-core\" \"npm run package:qt-cpp\" \"npm run package:qt-ui\" \"npm run package:qt-qml\"",
    "package:all_sync": "npm run package:qt-core && npm run package:qt-cpp && npm run package:qt-ui && npm run package:qt-qml",
    "compile:qt-core": "cd qt-core && npm run compile",
    "compile:qt-qml": "cd qt-qml && npm run compile",
    "compile:qt-cpp": "npm run prepareNatvisFiles && cd qt-cpp && npm run compile",
    "compile:qt-ui": "cd qt-ui && npm run compile",
    "compile:qt-lib": "cd qt-lib && npm run compile",
    "compile:all": "concurrently \"npm run compile:qt-core\" \"npm run compile:qt-cpp\" \"npm run compile:qt-ui\" \"npm run compile:qt-qml\"",
    "compile:all_sync": "npm run compile:qt-core && npm run compile:qt-cpp && npm run compile:qt-ui && npm run compile:qt-qml && npm run compile:qt-lib",
    "checkLicenses": "ts-node ./scripts/check_licenses.ts",
    "checkPackage": "ts-node ./scripts/check_package.ts",
    "checkStyle": "ts-node ./scripts/check_style.ts",
    "checkChangelog": "ts-node ./scripts/check_changelog.ts",
    "checkChangelog:qt-all-pack": "ts-node ./scripts/check_changelog.ts --dir=\"extension_packs/qt\"",
    "checkChangelog:qt-wasm-pack": "ts-node ./scripts/check_changelog.ts --dir=\"extension_packs/wasm\"",
    "checkChangelog:qt-cpp-pack": "ts-node ./scripts/check_changelog.ts --dir=\"extension_packs/cpp\"",
    "checkChangelog:all_ext_pack": "npm run checkChangelog:qt-all-pack && npm run checkChangelog:qt-wasm-pack && npm run checkChangelog:qt-cpp-pack",
    "generateLicenses": "ts-node ./scripts/generate_licenses.ts",
    "generateLicenses:qt-core": "npm run generateLicenses -- --dir=\"qt-core\" --exclude=\"qt-core, qt-lib\" --output=\"qt-core/ThirdPartyNotices.txt\" && npm run generateLicenses:qt-core-webview",
    "generateLicenses:qt-core-webview": "npm run generateLicenses -- --dir=\"qt-core/webview-ui\" --exclude=\"qt-core-webview\" --output=\"qt-core/webview-ui/ThirdPartyNotices.txt\"",
    "generateLicenses:qt-qml": "npm run generateLicenses -- --dir=\"qt-qml\" --exclude=\"qt-qml, qt-lib\" --output=\"qt-qml/ThirdPartyNotices.txt\"",
    "generateLicenses:qt-cpp": "npm run generateLicenses -- --dir=\"qt-cpp\" --exclude=\"qt-cpp, qt-lib\" --output=\"qt-cpp/ThirdPartyNotices.txt\"",
    "generateLicenses:qt-ui": "npm run generateLicenses -- --dir=\"qt-ui\" --exclude=\"qt-ui, qt-lib\" --output=\"qt-ui/ThirdPartyNotices.txt\"",
    "generateLicenses:all": "concurrently \"npm run generateLicenses:qt-core\" \"npm run generateLicenses:qt-cpp\" \"npm run generateLicenses:qt-ui\" \"npm run generateLicenses:qt-qml\"",
    "generateLicenses:all_sync": "npm run generateLicenses:qt-core && npm run generateLicenses:qt-cpp && npm run generateLicenses:qt-ui && npm run generateLicenses:qt-qml",
    "_prepublish_git": "git reset --hard && git clean -ffdx",
    "_prepublish": "npm run _prepublish_git && npm ci && npm run ci:qt-lib && npm run compile:qt-lib && npm run ci-lint:qt-lib",
    "publish:qt-core": "ts-node ./scripts/publish.ts --extension=\"qt-core\"",
    "publish:qt-qml": "ts-node ./scripts/publish.ts --extension=\"qt-qml\"",
    "publish:qt-cpp": "ts-node ./scripts/publish.ts --extension=\"qt-cpp\"",
    "publish:qt-ui": "ts-node ./scripts/publish.ts --extension=\"qt-ui\"",
    "publish:qt-cpp-pack": "ts-node ./scripts/publish_ext_pack.ts --dir=\"extension_packs/cpp\" --pack=\"qt-cpp-pack\"",
    "publish:qt-wasm-pack": "ts-node ./scripts/publish_ext_pack.ts --dir=\"extension_packs/wasm\" --pack=\"qt-wasm-pack\"",
    "publish:qt-all-pack": "ts-node ./scripts/publish_ext_pack.ts --dir=\"extension_packs/qt\" --pack=\"qt-all-pack\"",
    "prepareNatvisFiles": "ts-node ./scripts/prepare_natvis_files.ts",
    "prettierWrite": "npm run prettierBase -- --write \"scripts/**/*.{js,ts,json,mjs,cjs}\" \"eslint.config.mjs\" \"common/.eslintrc.cjs\" --log-level silent",
    "prettierCheck": "npm run prettierBase -- --check \"scripts/**/*.{js,ts,json,mjs,cjs}\" \"eslint.config.mjs\" \"common/.eslintrc.cjs\"",
    "prettierBase": "prettier --config \"common/.prettierrc\" --ignore-path \"common/.prettierignore\"",
    "auditFix": "npm audit fix --force && cd qt-lib && npm audit fix --force && cd ../qt-core && npm audit fix --force && cd ../qt-cpp && npm audit fix --force && cd ../qt-ui && npm audit fix --force && cd ../qt-qml && npm audit fix --force && cd ../qt-core/webview-ui && npm audit fix --force",
    "build:qt-cli": "cd qt-cli && bash run.sh build"
  },
  "devDependencies": {
    "@eslint/js": "^9.21.0",
    "@types/node": "^20.2.5",
    "@typescript-eslint/eslint-plugin": "^6.7.3",
    "@typescript-eslint/parser": "^6.7.3",
    "@vscode/vsce": "^2.32.0",
    "concurrently": "^8.2.2",
    "dotenv": "^16.5.0",
    "eslint": "^8.57.1",
    "kill-port": "^2.0.1",
    "license-checker": "^25.0.1",
    "prettier": "^3.0.3",
    "semver": "^7.6.3",
    "ts-node": "^10.4.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.25.0"
  },
  "dependencies": {
    "commander": "^12.1.0"
  }
}
